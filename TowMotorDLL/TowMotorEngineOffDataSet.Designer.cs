//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TowMotorDLL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TowMotorEngineOffDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TowMotorEngineOffDataSet : global::System.Data.DataSet {
        
        private towmotorengineoffDataTable tabletowmotorengineoff;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TowMotorEngineOffDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected TowMotorEngineOffDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["towmotorengineoff"] != null)) {
                    base.Tables.Add(new towmotorengineoffDataTable(ds.Tables["towmotorengineoff"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public towmotorengineoffDataTable towmotorengineoff {
            get {
                return this.tabletowmotorengineoff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TowMotorEngineOffDataSet cln = ((TowMotorEngineOffDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["towmotorengineoff"] != null)) {
                    base.Tables.Add(new towmotorengineoffDataTable(ds.Tables["towmotorengineoff"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabletowmotorengineoff = ((towmotorengineoffDataTable)(base.Tables["towmotorengineoff"]));
            if ((initTable == true)) {
                if ((this.tabletowmotorengineoff != null)) {
                    this.tabletowmotorengineoff.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TowMotorEngineOffDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TowMotorEngineOffDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletowmotorengineoff = new towmotorengineoffDataTable();
            base.Tables.Add(this.tabletowmotorengineoff);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializetowmotorengineoff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TowMotorEngineOffDataSet ds = new TowMotorEngineOffDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void towmotorengineoffRowChangeEventHandler(object sender, towmotorengineoffRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class towmotorengineoffDataTable : global::System.Data.TypedTableBase<towmotorengineoffRow> {
            
            private global::System.Data.DataColumn columnTransactionID;
            
            private global::System.Data.DataColumn columnInspectionID;
            
            private global::System.Data.DataColumn columnTransmissionFluid;
            
            private global::System.Data.DataColumn columnEngineAirCleaner;
            
            private global::System.Data.DataColumn columnFuelSedimentor;
            
            private global::System.Data.DataColumn columnRadiatorCoolant;
            
            private global::System.Data.DataColumn columnOperatorsManual;
            
            private global::System.Data.DataColumn columnInformationPlate;
            
            private global::System.Data.DataColumn columnSeatBelt;
            
            private global::System.Data.DataColumn columnHoodLatch;
            
            private global::System.Data.DataColumn columnBrakeFluid;
            
            private global::System.Data.DataColumn columnOverheadGuard;
            
            private global::System.Data.DataColumn columnFingerGuards;
            
            private global::System.Data.DataColumn columnParkingBrake;
            
            private global::System.Data.DataColumn columnSteeringOperation;
            
            private global::System.Data.DataColumn columnDriveControl;
            
            private global::System.Data.DataColumn columnTiltControl;
            
            private global::System.Data.DataColumn columnCab;
            
            private global::System.Data.DataColumn columnFuelLevel;
            
            private global::System.Data.DataColumn columnTemperature;
            
            private global::System.Data.DataColumn columnInstrumentMonitors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffDataTable() {
                this.TableName = "towmotorengineoff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal towmotorengineoffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected towmotorengineoffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransactionIDColumn {
                get {
                    return this.columnTransactionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InspectionIDColumn {
                get {
                    return this.columnInspectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransmissionFluidColumn {
                get {
                    return this.columnTransmissionFluid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EngineAirCleanerColumn {
                get {
                    return this.columnEngineAirCleaner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FuelSedimentorColumn {
                get {
                    return this.columnFuelSedimentor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RadiatorCoolantColumn {
                get {
                    return this.columnRadiatorCoolant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OperatorsManualColumn {
                get {
                    return this.columnOperatorsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InformationPlateColumn {
                get {
                    return this.columnInformationPlate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SeatBeltColumn {
                get {
                    return this.columnSeatBelt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HoodLatchColumn {
                get {
                    return this.columnHoodLatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BrakeFluidColumn {
                get {
                    return this.columnBrakeFluid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OverheadGuardColumn {
                get {
                    return this.columnOverheadGuard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FingerGuardsColumn {
                get {
                    return this.columnFingerGuards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ParkingBrakeColumn {
                get {
                    return this.columnParkingBrake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SteeringOperationColumn {
                get {
                    return this.columnSteeringOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DriveControlColumn {
                get {
                    return this.columnDriveControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TiltControlColumn {
                get {
                    return this.columnTiltControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CabColumn {
                get {
                    return this.columnCab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FuelLevelColumn {
                get {
                    return this.columnFuelLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TemperatureColumn {
                get {
                    return this.columnTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstrumentMonitorsColumn {
                get {
                    return this.columnInstrumentMonitors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffRow this[int index] {
                get {
                    return ((towmotorengineoffRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event towmotorengineoffRowChangeEventHandler towmotorengineoffRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event towmotorengineoffRowChangeEventHandler towmotorengineoffRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event towmotorengineoffRowChangeEventHandler towmotorengineoffRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event towmotorengineoffRowChangeEventHandler towmotorengineoffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddtowmotorengineoffRow(towmotorengineoffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffRow AddtowmotorengineoffRow(
                        int InspectionID, 
                        bool TransmissionFluid, 
                        bool EngineAirCleaner, 
                        bool FuelSedimentor, 
                        bool RadiatorCoolant, 
                        bool OperatorsManual, 
                        bool InformationPlate, 
                        bool SeatBelt, 
                        bool HoodLatch, 
                        bool BrakeFluid, 
                        bool OverheadGuard, 
                        bool FingerGuards, 
                        bool ParkingBrake, 
                        bool SteeringOperation, 
                        bool DriveControl, 
                        bool TiltControl, 
                        bool Cab, 
                        bool FuelLevel, 
                        bool Temperature, 
                        bool InstrumentMonitors) {
                towmotorengineoffRow rowtowmotorengineoffRow = ((towmotorengineoffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InspectionID,
                        TransmissionFluid,
                        EngineAirCleaner,
                        FuelSedimentor,
                        RadiatorCoolant,
                        OperatorsManual,
                        InformationPlate,
                        SeatBelt,
                        HoodLatch,
                        BrakeFluid,
                        OverheadGuard,
                        FingerGuards,
                        ParkingBrake,
                        SteeringOperation,
                        DriveControl,
                        TiltControl,
                        Cab,
                        FuelLevel,
                        Temperature,
                        InstrumentMonitors};
                rowtowmotorengineoffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtowmotorengineoffRow);
                return rowtowmotorengineoffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffRow FindByTransactionID(int TransactionID) {
                return ((towmotorengineoffRow)(this.Rows.Find(new object[] {
                            TransactionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                towmotorengineoffDataTable cln = ((towmotorengineoffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new towmotorengineoffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTransactionID = base.Columns["TransactionID"];
                this.columnInspectionID = base.Columns["InspectionID"];
                this.columnTransmissionFluid = base.Columns["TransmissionFluid"];
                this.columnEngineAirCleaner = base.Columns["EngineAirCleaner"];
                this.columnFuelSedimentor = base.Columns["FuelSedimentor"];
                this.columnRadiatorCoolant = base.Columns["RadiatorCoolant"];
                this.columnOperatorsManual = base.Columns["OperatorsManual"];
                this.columnInformationPlate = base.Columns["InformationPlate"];
                this.columnSeatBelt = base.Columns["SeatBelt"];
                this.columnHoodLatch = base.Columns["HoodLatch"];
                this.columnBrakeFluid = base.Columns["BrakeFluid"];
                this.columnOverheadGuard = base.Columns["OverheadGuard"];
                this.columnFingerGuards = base.Columns["FingerGuards"];
                this.columnParkingBrake = base.Columns["ParkingBrake"];
                this.columnSteeringOperation = base.Columns["SteeringOperation"];
                this.columnDriveControl = base.Columns["DriveControl"];
                this.columnTiltControl = base.Columns["TiltControl"];
                this.columnCab = base.Columns["Cab"];
                this.columnFuelLevel = base.Columns["FuelLevel"];
                this.columnTemperature = base.Columns["Temperature"];
                this.columnInstrumentMonitors = base.Columns["InstrumentMonitors"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTransactionID = new global::System.Data.DataColumn("TransactionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionID);
                this.columnInspectionID = new global::System.Data.DataColumn("InspectionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionID);
                this.columnTransmissionFluid = new global::System.Data.DataColumn("TransmissionFluid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransmissionFluid);
                this.columnEngineAirCleaner = new global::System.Data.DataColumn("EngineAirCleaner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineAirCleaner);
                this.columnFuelSedimentor = new global::System.Data.DataColumn("FuelSedimentor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSedimentor);
                this.columnRadiatorCoolant = new global::System.Data.DataColumn("RadiatorCoolant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRadiatorCoolant);
                this.columnOperatorsManual = new global::System.Data.DataColumn("OperatorsManual", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperatorsManual);
                this.columnInformationPlate = new global::System.Data.DataColumn("InformationPlate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationPlate);
                this.columnSeatBelt = new global::System.Data.DataColumn("SeatBelt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatBelt);
                this.columnHoodLatch = new global::System.Data.DataColumn("HoodLatch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoodLatch);
                this.columnBrakeFluid = new global::System.Data.DataColumn("BrakeFluid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrakeFluid);
                this.columnOverheadGuard = new global::System.Data.DataColumn("OverheadGuard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverheadGuard);
                this.columnFingerGuards = new global::System.Data.DataColumn("FingerGuards", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFingerGuards);
                this.columnParkingBrake = new global::System.Data.DataColumn("ParkingBrake", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParkingBrake);
                this.columnSteeringOperation = new global::System.Data.DataColumn("SteeringOperation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteeringOperation);
                this.columnDriveControl = new global::System.Data.DataColumn("DriveControl", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriveControl);
                this.columnTiltControl = new global::System.Data.DataColumn("TiltControl", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTiltControl);
                this.columnCab = new global::System.Data.DataColumn("Cab", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCab);
                this.columnFuelLevel = new global::System.Data.DataColumn("FuelLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelLevel);
                this.columnTemperature = new global::System.Data.DataColumn("Temperature", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperature);
                this.columnInstrumentMonitors = new global::System.Data.DataColumn("InstrumentMonitors", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentMonitors);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTransactionID}, true));
                this.columnTransactionID.AutoIncrement = true;
                this.columnTransactionID.AutoIncrementSeed = -1;
                this.columnTransactionID.AutoIncrementStep = -1;
                this.columnTransactionID.AllowDBNull = false;
                this.columnTransactionID.ReadOnly = true;
                this.columnTransactionID.Unique = true;
                this.columnInspectionID.AllowDBNull = false;
                this.columnTransmissionFluid.AllowDBNull = false;
                this.columnEngineAirCleaner.AllowDBNull = false;
                this.columnFuelSedimentor.AllowDBNull = false;
                this.columnRadiatorCoolant.AllowDBNull = false;
                this.columnOperatorsManual.AllowDBNull = false;
                this.columnInformationPlate.AllowDBNull = false;
                this.columnSeatBelt.AllowDBNull = false;
                this.columnHoodLatch.AllowDBNull = false;
                this.columnBrakeFluid.AllowDBNull = false;
                this.columnOverheadGuard.AllowDBNull = false;
                this.columnFingerGuards.AllowDBNull = false;
                this.columnParkingBrake.AllowDBNull = false;
                this.columnSteeringOperation.AllowDBNull = false;
                this.columnDriveControl.AllowDBNull = false;
                this.columnTiltControl.AllowDBNull = false;
                this.columnCab.AllowDBNull = false;
                this.columnFuelLevel.AllowDBNull = false;
                this.columnTemperature.AllowDBNull = false;
                this.columnInstrumentMonitors.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffRow NewtowmotorengineoffRow() {
                return ((towmotorengineoffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new towmotorengineoffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(towmotorengineoffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.towmotorengineoffRowChanged != null)) {
                    this.towmotorengineoffRowChanged(this, new towmotorengineoffRowChangeEvent(((towmotorengineoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.towmotorengineoffRowChanging != null)) {
                    this.towmotorengineoffRowChanging(this, new towmotorengineoffRowChangeEvent(((towmotorengineoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.towmotorengineoffRowDeleted != null)) {
                    this.towmotorengineoffRowDeleted(this, new towmotorengineoffRowChangeEvent(((towmotorengineoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.towmotorengineoffRowDeleting != null)) {
                    this.towmotorengineoffRowDeleting(this, new towmotorengineoffRowChangeEvent(((towmotorengineoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovetowmotorengineoffRow(towmotorengineoffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TowMotorEngineOffDataSet ds = new TowMotorEngineOffDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "towmotorengineoffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class towmotorengineoffRow : global::System.Data.DataRow {
            
            private towmotorengineoffDataTable tabletowmotorengineoff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal towmotorengineoffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletowmotorengineoff = ((towmotorengineoffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TransactionID {
                get {
                    return ((int)(this[this.tabletowmotorengineoff.TransactionIDColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.TransactionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InspectionID {
                get {
                    return ((int)(this[this.tabletowmotorengineoff.InspectionIDColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.InspectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TransmissionFluid {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.TransmissionFluidColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.TransmissionFluidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EngineAirCleaner {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.EngineAirCleanerColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.EngineAirCleanerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FuelSedimentor {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.FuelSedimentorColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.FuelSedimentorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RadiatorCoolant {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.RadiatorCoolantColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.RadiatorCoolantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OperatorsManual {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.OperatorsManualColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.OperatorsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool InformationPlate {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.InformationPlateColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.InformationPlateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SeatBelt {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.SeatBeltColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.SeatBeltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HoodLatch {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.HoodLatchColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.HoodLatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BrakeFluid {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.BrakeFluidColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.BrakeFluidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OverheadGuard {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.OverheadGuardColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.OverheadGuardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FingerGuards {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.FingerGuardsColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.FingerGuardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ParkingBrake {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.ParkingBrakeColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.ParkingBrakeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SteeringOperation {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.SteeringOperationColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.SteeringOperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool DriveControl {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.DriveControlColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.DriveControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TiltControl {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.TiltControlColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.TiltControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Cab {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.CabColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.CabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FuelLevel {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.FuelLevelColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.FuelLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Temperature {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.TemperatureColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.TemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool InstrumentMonitors {
                get {
                    return ((bool)(this[this.tabletowmotorengineoff.InstrumentMonitorsColumn]));
                }
                set {
                    this[this.tabletowmotorengineoff.InstrumentMonitorsColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class towmotorengineoffRowChangeEvent : global::System.EventArgs {
            
            private towmotorengineoffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffRowChangeEvent(towmotorengineoffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public towmotorengineoffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TowMotorDLL.TowMotorEngineOffDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class towmotorengineoffTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public towmotorengineoffTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "towmotorengineoff";
            tableMapping.ColumnMappings.Add("TransactionID", "TransactionID");
            tableMapping.ColumnMappings.Add("InspectionID", "InspectionID");
            tableMapping.ColumnMappings.Add("TransmissionFluid", "TransmissionFluid");
            tableMapping.ColumnMappings.Add("EngineAirCleaner", "EngineAirCleaner");
            tableMapping.ColumnMappings.Add("FuelSedimentor", "FuelSedimentor");
            tableMapping.ColumnMappings.Add("RadiatorCoolant", "RadiatorCoolant");
            tableMapping.ColumnMappings.Add("OperatorsManual", "OperatorsManual");
            tableMapping.ColumnMappings.Add("InformationPlate", "InformationPlate");
            tableMapping.ColumnMappings.Add("SeatBelt", "SeatBelt");
            tableMapping.ColumnMappings.Add("HoodLatch", "HoodLatch");
            tableMapping.ColumnMappings.Add("BrakeFluid", "BrakeFluid");
            tableMapping.ColumnMappings.Add("OverheadGuard", "OverheadGuard");
            tableMapping.ColumnMappings.Add("FingerGuards", "FingerGuards");
            tableMapping.ColumnMappings.Add("ParkingBrake", "ParkingBrake");
            tableMapping.ColumnMappings.Add("SteeringOperation", "SteeringOperation");
            tableMapping.ColumnMappings.Add("DriveControl", "DriveControl");
            tableMapping.ColumnMappings.Add("TiltControl", "TiltControl");
            tableMapping.ColumnMappings.Add("Cab", "Cab");
            tableMapping.ColumnMappings.Add("FuelLevel", "FuelLevel");
            tableMapping.ColumnMappings.Add("Temperature", "Temperature");
            tableMapping.ColumnMappings.Add("InstrumentMonitors", "InstrumentMonitors");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[towmotorengineoff] WHERE (([TransactionID] = @Original_TransactionID) AND ([InspectionID] = @Original_InspectionID) AND ([TransmissionFluid] = @Original_TransmissionFluid) AND ([EngineAirCleaner] = @Original_EngineAirCleaner) AND ([FuelSedimentor] = @Original_FuelSedimentor) AND ([RadiatorCoolant] = @Original_RadiatorCoolant) AND ([OperatorsManual] = @Original_OperatorsManual) AND ([InformationPlate] = @Original_InformationPlate) AND ([SeatBelt] = @Original_SeatBelt) AND ([HoodLatch] = @Original_HoodLatch) AND ([BrakeFluid] = @Original_BrakeFluid) AND ([OverheadGuard] = @Original_OverheadGuard) AND ([FingerGuards] = @Original_FingerGuards) AND ([ParkingBrake] = @Original_ParkingBrake) AND ([SteeringOperation] = @Original_SteeringOperation) AND ([DriveControl] = @Original_DriveControl) AND ([TiltControl] = @Original_TiltControl) AND ([Cab] = @Original_Cab) AND ([FuelLevel] = @Original_FuelLevel) AND ([Temperature] = @Original_Temperature) AND ([InstrumentMonitors] = @Original_InstrumentMonitors))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransactionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InspectionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransmissionFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransmissionFluid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EngineAirCleaner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineAirCleaner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSedimentor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSedimentor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RadiatorCoolant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RadiatorCoolant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorsManual", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorsManual", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InformationPlate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPlate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeatBelt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatBelt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoodLatch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoodLatch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BrakeFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BrakeFluid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OverheadGuard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverheadGuard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FingerGuards", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerGuards", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParkingBrake", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParkingBrake", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SteeringOperation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SteeringOperation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DriveControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TiltControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TiltControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cab", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cab", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Temperature", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temperature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstrumentMonitors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstrumentMonitors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[towmotorengineoff] ([InspectionID], [TransmissionFluid], [EngineAirCleaner], [FuelSedimentor], [RadiatorCoolant], [OperatorsManual], [InformationPlate], [SeatBelt], [HoodLatch], [BrakeFluid], [OverheadGuard], [FingerGuards], [ParkingBrake], [SteeringOperation], [DriveControl], [TiltControl], [Cab], [FuelLevel], [Temperature], [InstrumentMonitors]) VALUES (@InspectionID, @TransmissionFluid, @EngineAirCleaner, @FuelSedimentor, @RadiatorCoolant, @OperatorsManual, @InformationPlate, @SeatBelt, @HoodLatch, @BrakeFluid, @OverheadGuard, @FingerGuards, @ParkingBrake, @SteeringOperation, @DriveControl, @TiltControl, @Cab, @FuelLevel, @Temperature, @InstrumentMonitors);
SELECT TransactionID, InspectionID, TransmissionFluid, EngineAirCleaner, FuelSedimentor, RadiatorCoolant, OperatorsManual, InformationPlate, SeatBelt, HoodLatch, BrakeFluid, OverheadGuard, FingerGuards, ParkingBrake, SteeringOperation, DriveControl, TiltControl, Cab, FuelLevel, Temperature, InstrumentMonitors FROM towmotorengineoff WHERE (TransactionID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransmissionFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransmissionFluid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngineAirCleaner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineAirCleaner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSedimentor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSedimentor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RadiatorCoolant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RadiatorCoolant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorsManual", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorsManual", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationPlate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPlate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeatBelt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatBelt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoodLatch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoodLatch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BrakeFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BrakeFluid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverheadGuard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverheadGuard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FingerGuards", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerGuards", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParkingBrake", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParkingBrake", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SteeringOperation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SteeringOperation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriveControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TiltControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TiltControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cab", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cab", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Temperature", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temperature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstrumentMonitors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstrumentMonitors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[towmotorengineoff] SET [InspectionID] = @InspectionID, [Transmissio" +
                "nFluid] = @TransmissionFluid, [EngineAirCleaner] = @EngineAirCleaner, [FuelSedim" +
                "entor] = @FuelSedimentor, [RadiatorCoolant] = @RadiatorCoolant, [OperatorsManual" +
                "] = @OperatorsManual, [InformationPlate] = @InformationPlate, [SeatBelt] = @Seat" +
                "Belt, [HoodLatch] = @HoodLatch, [BrakeFluid] = @BrakeFluid, [OverheadGuard] = @O" +
                "verheadGuard, [FingerGuards] = @FingerGuards, [ParkingBrake] = @ParkingBrake, [S" +
                "teeringOperation] = @SteeringOperation, [DriveControl] = @DriveControl, [TiltCon" +
                "trol] = @TiltControl, [Cab] = @Cab, [FuelLevel] = @FuelLevel, [Temperature] = @T" +
                "emperature, [InstrumentMonitors] = @InstrumentMonitors WHERE (([TransactionID] =" +
                " @Original_TransactionID) AND ([InspectionID] = @Original_InspectionID) AND ([Tr" +
                "ansmissionFluid] = @Original_TransmissionFluid) AND ([EngineAirCleaner] = @Origi" +
                "nal_EngineAirCleaner) AND ([FuelSedimentor] = @Original_FuelSedimentor) AND ([Ra" +
                "diatorCoolant] = @Original_RadiatorCoolant) AND ([OperatorsManual] = @Original_O" +
                "peratorsManual) AND ([InformationPlate] = @Original_InformationPlate) AND ([Seat" +
                "Belt] = @Original_SeatBelt) AND ([HoodLatch] = @Original_HoodLatch) AND ([BrakeF" +
                "luid] = @Original_BrakeFluid) AND ([OverheadGuard] = @Original_OverheadGuard) AN" +
                "D ([FingerGuards] = @Original_FingerGuards) AND ([ParkingBrake] = @Original_Park" +
                "ingBrake) AND ([SteeringOperation] = @Original_SteeringOperation) AND ([DriveCon" +
                "trol] = @Original_DriveControl) AND ([TiltControl] = @Original_TiltControl) AND " +
                "([Cab] = @Original_Cab) AND ([FuelLevel] = @Original_FuelLevel) AND ([Temperatur" +
                "e] = @Original_Temperature) AND ([InstrumentMonitors] = @Original_InstrumentMoni" +
                "tors));\r\nSELECT TransactionID, InspectionID, TransmissionFluid, EngineAirCleaner" +
                ", FuelSedimentor, RadiatorCoolant, OperatorsManual, InformationPlate, SeatBelt, " +
                "HoodLatch, BrakeFluid, OverheadGuard, FingerGuards, ParkingBrake, SteeringOperat" +
                "ion, DriveControl, TiltControl, Cab, FuelLevel, Temperature, InstrumentMonitors " +
                "FROM towmotorengineoff WHERE (TransactionID = @TransactionID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransmissionFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransmissionFluid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngineAirCleaner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineAirCleaner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSedimentor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSedimentor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RadiatorCoolant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RadiatorCoolant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperatorsManual", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorsManual", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationPlate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPlate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeatBelt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatBelt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoodLatch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoodLatch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BrakeFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BrakeFluid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverheadGuard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverheadGuard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FingerGuards", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerGuards", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParkingBrake", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParkingBrake", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SteeringOperation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SteeringOperation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriveControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TiltControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TiltControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cab", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cab", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Temperature", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temperature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstrumentMonitors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstrumentMonitors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransactionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InspectionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransmissionFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransmissionFluid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EngineAirCleaner", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineAirCleaner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSedimentor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSedimentor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RadiatorCoolant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RadiatorCoolant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperatorsManual", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperatorsManual", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InformationPlate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPlate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeatBelt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatBelt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoodLatch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoodLatch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BrakeFluid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BrakeFluid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OverheadGuard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverheadGuard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FingerGuards", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerGuards", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParkingBrake", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParkingBrake", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SteeringOperation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SteeringOperation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DriveControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TiltControl", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TiltControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cab", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cab", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Temperature", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temperature", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstrumentMonitors", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstrumentMonitors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransactionID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TowMotorDLL.Properties.Settings.Default.whsetracConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TransactionID, InspectionID, TransmissionFluid, EngineAirCleaner, FuelSedimentor, RadiatorCoolant, OperatorsManual, InformationPlate, SeatBelt, HoodLatch, BrakeFluid, OverheadGuard, FingerGuards, ParkingBrake, SteeringOperation, DriveControl, TiltControl, Cab, FuelLevel, Temperature, InstrumentMonitors FROM dbo.towmotorengineoff";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TowMotorEngineOffDataSet.towmotorengineoffDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TowMotorEngineOffDataSet.towmotorengineoffDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TowMotorEngineOffDataSet.towmotorengineoffDataTable dataTable = new TowMotorEngineOffDataSet.towmotorengineoffDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TowMotorEngineOffDataSet.towmotorengineoffDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TowMotorEngineOffDataSet dataSet) {
            return this.Adapter.Update(dataSet, "towmotorengineoff");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_TransactionID, 
                    int Original_InspectionID, 
                    bool Original_TransmissionFluid, 
                    bool Original_EngineAirCleaner, 
                    bool Original_FuelSedimentor, 
                    bool Original_RadiatorCoolant, 
                    bool Original_OperatorsManual, 
                    bool Original_InformationPlate, 
                    bool Original_SeatBelt, 
                    bool Original_HoodLatch, 
                    bool Original_BrakeFluid, 
                    bool Original_OverheadGuard, 
                    bool Original_FingerGuards, 
                    bool Original_ParkingBrake, 
                    bool Original_SteeringOperation, 
                    bool Original_DriveControl, 
                    bool Original_TiltControl, 
                    bool Original_Cab, 
                    bool Original_FuelLevel, 
                    bool Original_Temperature, 
                    bool Original_InstrumentMonitors) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TransactionID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_InspectionID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_TransmissionFluid));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_EngineAirCleaner));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_FuelSedimentor));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_RadiatorCoolant));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_OperatorsManual));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_InformationPlate));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_SeatBelt));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_HoodLatch));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_BrakeFluid));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_OverheadGuard));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_FingerGuards));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_ParkingBrake));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_SteeringOperation));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_DriveControl));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_TiltControl));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_Cab));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_FuelLevel));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_Temperature));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_InstrumentMonitors));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int InspectionID, 
                    bool TransmissionFluid, 
                    bool EngineAirCleaner, 
                    bool FuelSedimentor, 
                    bool RadiatorCoolant, 
                    bool OperatorsManual, 
                    bool InformationPlate, 
                    bool SeatBelt, 
                    bool HoodLatch, 
                    bool BrakeFluid, 
                    bool OverheadGuard, 
                    bool FingerGuards, 
                    bool ParkingBrake, 
                    bool SteeringOperation, 
                    bool DriveControl, 
                    bool TiltControl, 
                    bool Cab, 
                    bool FuelLevel, 
                    bool Temperature, 
                    bool InstrumentMonitors) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(InspectionID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(TransmissionFluid));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(EngineAirCleaner));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(FuelSedimentor));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(RadiatorCoolant));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(OperatorsManual));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(InformationPlate));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(SeatBelt));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(HoodLatch));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(BrakeFluid));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(OverheadGuard));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(FingerGuards));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(ParkingBrake));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(SteeringOperation));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(DriveControl));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(TiltControl));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(Cab));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(FuelLevel));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(Temperature));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(InstrumentMonitors));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int InspectionID, 
                    bool TransmissionFluid, 
                    bool EngineAirCleaner, 
                    bool FuelSedimentor, 
                    bool RadiatorCoolant, 
                    bool OperatorsManual, 
                    bool InformationPlate, 
                    bool SeatBelt, 
                    bool HoodLatch, 
                    bool BrakeFluid, 
                    bool OverheadGuard, 
                    bool FingerGuards, 
                    bool ParkingBrake, 
                    bool SteeringOperation, 
                    bool DriveControl, 
                    bool TiltControl, 
                    bool Cab, 
                    bool FuelLevel, 
                    bool Temperature, 
                    bool InstrumentMonitors, 
                    int Original_TransactionID, 
                    int Original_InspectionID, 
                    bool Original_TransmissionFluid, 
                    bool Original_EngineAirCleaner, 
                    bool Original_FuelSedimentor, 
                    bool Original_RadiatorCoolant, 
                    bool Original_OperatorsManual, 
                    bool Original_InformationPlate, 
                    bool Original_SeatBelt, 
                    bool Original_HoodLatch, 
                    bool Original_BrakeFluid, 
                    bool Original_OverheadGuard, 
                    bool Original_FingerGuards, 
                    bool Original_ParkingBrake, 
                    bool Original_SteeringOperation, 
                    bool Original_DriveControl, 
                    bool Original_TiltControl, 
                    bool Original_Cab, 
                    bool Original_FuelLevel, 
                    bool Original_Temperature, 
                    bool Original_InstrumentMonitors, 
                    int TransactionID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(InspectionID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(TransmissionFluid));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(EngineAirCleaner));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(FuelSedimentor));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(RadiatorCoolant));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(OperatorsManual));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(InformationPlate));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(SeatBelt));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(HoodLatch));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(BrakeFluid));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(OverheadGuard));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(FingerGuards));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(ParkingBrake));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(SteeringOperation));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(DriveControl));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(TiltControl));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Cab));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(FuelLevel));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Temperature));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(InstrumentMonitors));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_TransactionID));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_InspectionID));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Original_TransmissionFluid));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_EngineAirCleaner));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_FuelSedimentor));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Original_RadiatorCoolant));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_OperatorsManual));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Original_InformationPlate));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(Original_SeatBelt));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_HoodLatch));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_BrakeFluid));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_OverheadGuard));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_FingerGuards));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_ParkingBrake));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_SteeringOperation));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_DriveControl));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(Original_TiltControl));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_Cab));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Original_FuelLevel));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_Temperature));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(Original_InstrumentMonitors));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(TransactionID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int InspectionID, 
                    bool TransmissionFluid, 
                    bool EngineAirCleaner, 
                    bool FuelSedimentor, 
                    bool RadiatorCoolant, 
                    bool OperatorsManual, 
                    bool InformationPlate, 
                    bool SeatBelt, 
                    bool HoodLatch, 
                    bool BrakeFluid, 
                    bool OverheadGuard, 
                    bool FingerGuards, 
                    bool ParkingBrake, 
                    bool SteeringOperation, 
                    bool DriveControl, 
                    bool TiltControl, 
                    bool Cab, 
                    bool FuelLevel, 
                    bool Temperature, 
                    bool InstrumentMonitors, 
                    int Original_TransactionID, 
                    int Original_InspectionID, 
                    bool Original_TransmissionFluid, 
                    bool Original_EngineAirCleaner, 
                    bool Original_FuelSedimentor, 
                    bool Original_RadiatorCoolant, 
                    bool Original_OperatorsManual, 
                    bool Original_InformationPlate, 
                    bool Original_SeatBelt, 
                    bool Original_HoodLatch, 
                    bool Original_BrakeFluid, 
                    bool Original_OverheadGuard, 
                    bool Original_FingerGuards, 
                    bool Original_ParkingBrake, 
                    bool Original_SteeringOperation, 
                    bool Original_DriveControl, 
                    bool Original_TiltControl, 
                    bool Original_Cab, 
                    bool Original_FuelLevel, 
                    bool Original_Temperature, 
                    bool Original_InstrumentMonitors) {
            return this.Update(InspectionID, TransmissionFluid, EngineAirCleaner, FuelSedimentor, RadiatorCoolant, OperatorsManual, InformationPlate, SeatBelt, HoodLatch, BrakeFluid, OverheadGuard, FingerGuards, ParkingBrake, SteeringOperation, DriveControl, TiltControl, Cab, FuelLevel, Temperature, InstrumentMonitors, Original_TransactionID, Original_InspectionID, Original_TransmissionFluid, Original_EngineAirCleaner, Original_FuelSedimentor, Original_RadiatorCoolant, Original_OperatorsManual, Original_InformationPlate, Original_SeatBelt, Original_HoodLatch, Original_BrakeFluid, Original_OverheadGuard, Original_FingerGuards, Original_ParkingBrake, Original_SteeringOperation, Original_DriveControl, Original_TiltControl, Original_Cab, Original_FuelLevel, Original_Temperature, Original_InstrumentMonitors, Original_TransactionID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private towmotorengineoffTableAdapter _towmotorengineoffTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public towmotorengineoffTableAdapter towmotorengineoffTableAdapter {
            get {
                return this._towmotorengineoffTableAdapter;
            }
            set {
                this._towmotorengineoffTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._towmotorengineoffTableAdapter != null) 
                            && (this._towmotorengineoffTableAdapter.Connection != null))) {
                    return this._towmotorengineoffTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._towmotorengineoffTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(TowMotorEngineOffDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._towmotorengineoffTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.towmotorengineoff.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._towmotorengineoffTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(TowMotorEngineOffDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._towmotorengineoffTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.towmotorengineoff.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._towmotorengineoffTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(TowMotorEngineOffDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._towmotorengineoffTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.towmotorengineoff.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._towmotorengineoffTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(TowMotorEngineOffDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._towmotorengineoffTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._towmotorengineoffTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._towmotorengineoffTableAdapter != null)) {
                    revertConnections.Add(this._towmotorengineoffTableAdapter, this._towmotorengineoffTableAdapter.Connection);
                    this._towmotorengineoffTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._towmotorengineoffTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._towmotorengineoffTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._towmotorengineoffTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._towmotorengineoffTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._towmotorengineoffTableAdapter != null)) {
                    this._towmotorengineoffTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._towmotorengineoffTableAdapter]));
                    this._towmotorengineoffTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591